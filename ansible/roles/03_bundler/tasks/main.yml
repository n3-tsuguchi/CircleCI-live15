---
- name: Check if project was cloned
  stat:
    path: "{{ app_root_dir }}/.git"
  register: was_cloned_rails

- name: Check if Gemfile directory exists
  stat:
    path: "{{ app_root_dir }}/Gemfile"
  register: has_directory_gemfile

- name: Check if bundler exists
  shell: bash -lc 'export PATH="/usr/local/rbenv/bin:$PATH"; eval "$(rbenv init -)"; bundler version | grep {{ bundler_version }}'
  register: bundler_exists
  changed_when: no
  ignore_errors: yes

- name: Install bundler
  shell: bash -lc 'export PATH="/usr/local/rbenv/bin:$PATH"; eval "$(rbenv init -)"; gem install bundler -v {{ bundler_version }}'
  when: bundler_exists is failed
  args:
    executable: /bin/bash

- name: Check bundler version installed
  shell: bash -lc 'export PATH="/usr/local/rbenv/bin:$PATH"; eval "$(rbenv init -)"; bundler -v | grep {{ bundler_version }}'
  changed_when: false
  args:
    executable: /bin/bash

- name: Install gems
  shell: bash -lc 'export PATH="/usr/local/rbenv/bin:$PATH"; eval "$(rbenv init -)"; bundle install'
  args:
    chdir: "{{ app_root_dir }}"
  when: not was_cloned_rails.stat.exists or has_directory_gemfile.stat.exists
  args:
    executable: /bin/bash

- name: Install webpacker
  shell: bash -lc 'export PATH="/usr/local/rbenv/bin:$PATH"; eval "$(rbenv init -)"; bundle exec rails webpacker:install'
  args:
    chdir: "{{ app_root_dir }}"
  when: not was_cloned_rails.stat.exists or has_directory_gemfile.stat.exists
  args:
    executable: /bin/bash
